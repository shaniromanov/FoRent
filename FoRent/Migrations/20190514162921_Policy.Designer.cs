// <auto-generated />
using FoRent.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FoRent.Migrations
{
    [DbContext(typeof(FoRentContext))]
    [Migration("20190514162921_Policy")]
    partial class Policy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoRent.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("LocationId");

                    b.Property<string>("Name");

                    b.Property<decimal>("PriceAdult");

                    b.Property<decimal>("PriceChild");

                    b.Property<int?>("RenterId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("RenterId");

                    b.ToTable("Apartment");
                });

            modelBuilder.Entity("FoRent.Models.ApartmentAmenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Accessibility");

                    b.Property<bool>("AirConditioning");

                    b.Property<bool>("Balcony");

                    b.Property<string>("Comment");

                    b.Property<string>("Description");

                    b.Property<int>("NumOfPersons");

                    b.Property<double>("NumOfRooms");

                    b.Property<bool>("Parking");

                    b.Property<bool>("Wifi");

                    b.HasKey("Id");

                    b.ToTable("ApartmentAmenities");
                });

            modelBuilder.Entity("FoRent.Models.Hirer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Mail");

                    b.Property<string>("Password");

                    b.Property<int>("Phone");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Hirer");
                });

            modelBuilder.Entity("FoRent.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("FoRent.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApartmentId");

                    b.Property<DateTime>("CheckIn");

                    b.Property<DateTime>("CheckOut");

                    b.Property<int?>("HirerId");

                    b.Property<int>("QuantityAdult");

                    b.Property<int>("QuantityChild");

                    b.HasKey("Id");

                    b.HasIndex("HirerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FoRent.Models.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cancellations");

                    b.Property<string>("Checkin");

                    b.Property<string>("Checkout");

                    b.Property<string>("Creditcardsaccepted");

                    b.Property<string>("Extrabeds");

                    b.HasKey("Id");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("FoRent.Models.Renter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Mail");

                    b.Property<int>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Renter");
                });

            modelBuilder.Entity("FoRent.Models.Apartment", b =>
                {
                    b.HasOne("FoRent.Models.Location", "Location")
                        .WithMany("Apartments")
                        .HasForeignKey("LocationId");

                    b.HasOne("FoRent.Models.Renter", "Renter")
                        .WithMany("Apartments")
                        .HasForeignKey("RenterId");
                });

            modelBuilder.Entity("FoRent.Models.Order", b =>
                {
                    b.HasOne("FoRent.Models.Hirer", "Hirer")
                        .WithMany("Orders")
                        .HasForeignKey("HirerId");
                });
#pragma warning restore 612, 618
        }
    }
}
